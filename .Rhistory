working_directory <- "~/Data Science R Course/Final Project"
setwd(working_directory)
bank <- read.csv("bank-additional-full.csv", na.strings = c("unknown", "none"))
working_directory <- "~/Data Science R Course/Data"
setwd(working_directory)
bank <- read.csv("bank-additional-full.csv", na.strings = c("unknown", "none"))
# bank <- bank[bank$previous == 0,]
bank <- bank[c(1:8, 10:12, 14:21)]
summary(bank$education)
# Observations that had NAs in these features were removed because there weren't many with NAs in these
bank <- bank %>% drop_na(job, marital)
library(tidyr)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(tree)
library(ISLR)
library(stringr)
library(MASS)
library(randomForest)
library(gbm)
library(ROSE)
library(gmodels)
library(imbalance)
library(themis)
library(ranger)
library(caret)
library(parallel)
library(doParallel)
library(pROC)
working_directory <- "~/Data Science R Course/Data"
setwd(working_directory)
bank <- read.csv("bank-additional-full.csv", na.strings = c("unknown", "none"))
# bank <- bank[bank$previous == 0,]
bank <- bank[c(1:8, 10:12, 14:21)]
summary(bank$education)
# Observations that had NAs in these features were removed because there weren't many with NAs in these
bank <- bank %>% drop_na(job, marital)
# "unknown" is a factor option for default because a customer providing information about having credit in default is up to them to decide to share, and there might be a a statistical difference in people who do share the information and people who do not share it
# The reason for the outliers that have given a yes response might be because people who do have credit default in their account are unwilling to share that information, and only a few disclosed that
bank$default <- ifelse(is.na(bank$default), "unknown", bank$default)
bank$default <- factor(bank$default, levels = c("no", "yes", "unknown"))
bank$default <- factor(unclass(bank$default))
# Setting up the rest of the variables and just making sure they are the proper types
bank$housing <- factor(ifelse(bank$housing == "yes", 1, 0))
bank$y <- factor(ifelse(bank$y == "yes", 1, 0))
bank$loan <- factor(ifelse(bank$loan == "yes", 1, 0))
# Changing the job factor
bank$job <- factor(ifelse(bank$job == "unemployed" | bank$job == "retired" | bank$job == "student", bank$job, "employed"))
bank$job <- factor(bank$job, levels = c("unemployed", "student", "employed", "retired"))
bank$job <- factor(unclass(bank$job))
bank$marital <- factor(bank$marital, levels = c("single", "married", "divorced"))
bank$marital <- factor(unclass(bank$marital))
bank$education <- factor(bank$education, levels = c("illiterate" ,"basic.4y", "basic.6y", "basic.9y", "high.school", "professional.course", "university.degree"))
bank$education <- factor(unclass(bank$education))
bank$education <- replace(bank$education, is.na(bank$education), factor(get_mode(bank$education)))
get_mode <- function(v) {
v <- v[nchar(as.character(v))>0]
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
working_directory <- "~/Data Science R Course/Data"
setwd(working_directory)
bank <- read.csv("bank-additional-full.csv", na.strings = c("unknown", "none"))
# bank <- bank[bank$previous == 0,]
bank <- bank[c(1:8, 10:12, 14:21)]
summary(bank$education)
# Observations that had NAs in these features were removed because there weren't many with NAs in these
bank <- bank %>% drop_na(job, marital)
# "unknown" is a factor option for default because a customer providing information about having credit in default is up to them to decide to share, and there might be a a statistical difference in people who do share the information and people who do not share it
# The reason for the outliers that have given a yes response might be because people who do have credit default in their account are unwilling to share that information, and only a few disclosed that
bank$default <- ifelse(is.na(bank$default), "unknown", bank$default)
bank$default <- factor(bank$default, levels = c("no", "yes", "unknown"))
bank$default <- factor(unclass(bank$default))
# Setting up the rest of the variables and just making sure they are the proper types
bank$housing <- factor(ifelse(bank$housing == "yes", 1, 0))
bank$y <- factor(ifelse(bank$y == "yes", 1, 0))
bank$loan <- factor(ifelse(bank$loan == "yes", 1, 0))
# Changing the job factor
bank$job <- factor(ifelse(bank$job == "unemployed" | bank$job == "retired" | bank$job == "student", bank$job, "employed"))
bank$job <- factor(bank$job, levels = c("unemployed", "student", "employed", "retired"))
bank$job <- factor(unclass(bank$job))
bank$marital <- factor(bank$marital, levels = c("single", "married", "divorced"))
bank$marital <- factor(unclass(bank$marital))
bank$education <- factor(bank$education, levels = c("illiterate" ,"basic.4y", "basic.6y", "basic.9y", "high.school", "professional.course", "university.degree"))
bank$education <- factor(unclass(bank$education))
bank$education <- replace(bank$education, is.na(bank$education), factor(get_mode(bank$education)))
bank$housing <- replace(bank$housing, is.na(bank$housing), factor(get_mode(bank$housing)))
bank$loan <- replace(bank$loan, is.na(bank$loan), factor(get_mode(bank$loan)))
bank$contact <- as.factor(bank$contact)
bank$contact <- factor(unclass(bank$contact))
bank$day_of_week <- factor(bank$day_of_week, levels = c("mon", "tue", "wed", "thu", "fri"))
bank$day_of_week <- factor(unclass(bank$day_of_week))
bank$campaign <- factor(bank$campaign)
bank$previous <- factor(bank$previous)
bank$poutcome <- factor(bank$poutcome, levels = c("nonexistent", "failure", "success"))
bank$poutcome <- factor(unclass(bank$poutcome) - 2)
summary(bank$poutcome)
summary(bank$age)
summary(bank$default)
load("~/Data Science R Course/Final Project/finalprojectdata.RData")
CrossTable(test$y, test_predictions)
library(tidyr)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(tree)
library(ISLR)
library(stringr)
library(MASS)
library(randomForest)
library(gbm)
library(ROSE)
library(gmodels)
library(imbalance)
library(themis)
library(ranger)
library(caret)
library(parallel)
library(doParallel)
library(pROC)
get_mode <- function(v) {
v <- v[nchar(as.character(v))>0]
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
working_directory <- "~/Data Science R Course/Final Project"
setwd(working_directory)
bank <- read.csv("bank-additional-full.csv", na.strings = c("unknown", "none"))
# bank <- bank[bank$previous == 0,]
bank <- bank[c(1:8, 10:12, 14:21)]
summary(bank$education)
# Observations that had NAs in these features were removed because there weren't many with NAs in these
bank <- bank %>% drop_na(job, marital)
# "unknown" is a factor option for default because a customer providing information about having credit in default is up to them to decide to share, and there might be a a statistical difference in people who do share the information and people who do not share it
# The reason for the outliers that have given a yes response might be because people who do have credit default in their account are unwilling to share that information, and only a few disclosed that
bank$default <- ifelse(is.na(bank$default), "unknown", bank$default)
bank$default <- factor(bank$default, levels = c("no", "yes", "unknown"))
bank$default <- factor(unclass(bank$default))
# Setting up the rest of the variables and just making sure they are the proper types
bank$housing <- factor(ifelse(bank$housing == "yes", 1, 0))
bank$y <- factor(ifelse(bank$y == "yes", 1, 0))
bank$loan <- factor(ifelse(bank$loan == "yes", 1, 0))
# Changing the job factor
bank$job <- factor(ifelse(bank$job == "unemployed" | bank$job == "retired" | bank$job == "student", bank$job, "employed"))
bank$job <- factor(bank$job, levels = c("unemployed", "student", "employed", "retired"))
bank$job <- factor(unclass(bank$job))
bank$marital <- factor(bank$marital, levels = c("single", "married", "divorced"))
bank$marital <- factor(unclass(bank$marital))
bank$education <- factor(bank$education, levels = c("illiterate" ,"basic.4y", "basic.6y", "basic.9y", "high.school", "professional.course", "university.degree"))
bank$education <- factor(unclass(bank$education))
bank$education <- replace(bank$education, is.na(bank$education), factor(get_mode(bank$education)))
bank$housing <- replace(bank$housing, is.na(bank$housing), factor(get_mode(bank$housing)))
bank$loan <- replace(bank$loan, is.na(bank$loan), factor(get_mode(bank$loan)))
bank$contact <- as.factor(bank$contact)
bank$contact <- factor(unclass(bank$contact))
bank$day_of_week <- factor(bank$day_of_week, levels = c("mon", "tue", "wed", "thu", "fri"))
bank$day_of_week <- factor(unclass(bank$day_of_week))
bank$campaign <- factor(bank$campaign)
bank$previous <- factor(bank$previous)
bank$poutcome <- factor(bank$poutcome, levels = c("nonexistent", "failure", "success"))
bank$poutcome <- factor(unclass(bank$poutcome) - 2)
summary(bank$poutcome)
summary(bank$age)
summary(bank$default)
load("~/Data Science R Course/Final Project/finalprojectdata.RData")
CrossTable(test$y, test_predictions$predict)
# confusionMatrix(test_predictions$predict, test$y)
CrossTable(test$y, test_predictions$predict)
library(tidyr)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(tree)
library(ISLR)
library(stringr)
library(MASS)
library(randomForest)
library(gbm)
library(ROSE)
library(gmodels)
library(imbalance)
library(themis)
library(ranger)
library(caret)
library(parallel)
library(doParallel)
library(pROC)
# confusionMatrix(test_predictions$predict, test$y)
CrossTable(test$y, test_predictions$predict)
CrossTable(test$y, test_predictions)
